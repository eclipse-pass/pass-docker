# Env customizations for a local development instance
version: '3.8'

services:
  pass-core:
    depends_on:
      postgres:
        condition: service_started
      localstack:
        condition: service_healthy
      idp:
        condition: service_healthy
    env_file:
      - .env
      - .eclipse-pass.local_env
    healthcheck:
      test: 'curl -u "$$PASS_CORE_BACKEND_USER:$$PASS_CORE_BACKEND_PASSWORD" -f http://pass-core:8080/data/user || exit 1'
      start_period: 60s
      interval: 5s
    ports:
      - 8080:8080
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pass-ui:
    env_file:
      - .env
      - .eclipse-pass.local_env

  postgres:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
      - .eclipse-pass.local_env
    networks:
      - back
    volumes:
      - db:/var/lib/postgresql/data
      - ./postgres/demo/init_postgres.sh:/docker-entrypoint-initdb.d/init_postgres.sh

  idp:
    image: "tier/shib-idp:4.3.3_20240415"
    container_name: idp
    depends_on:
      ldap:
        condition: service_healthy
    env_file:
      - .env
      - .eclipse-pass.local_env
    ports:
      - 9080:${IDP_INTERNAL_PORT-8080}
    command:
      - /bin/bash
      - -c
      - |
        cp /idp-config/config/tomcat/* /usr/local/tomcat/conf
        cp /idp-config/credentials/tomcat/* /opt/certs
        cp /idp-config/config/shib-idp/conf/* /opt/shibboleth-idp/conf
        cp /idp-config/credentials/shib-idp/* /opt/shibboleth-idp/credentials
        cp /idp-config/config/shib-idp/metadata/* /opt/shibboleth-idp/metadata
        cp /idp-config/dummylogo.png /opt/shibboleth-idp/edit-webapp/images/placeholder-logo.png

        sed -i "s#IDP_HOST#$$IDP_HOST#g" /opt/shibboleth-idp/metadata/idp-metadata.xml
        sed -i "s#IDP_HOST#$$IDP_HOST#g" /opt/shibboleth-idp/conf/idp.properties
        sed -i "s#SP_LOGIN#$$SP_LOGIN#g" /opt/shibboleth-idp/metadata/sp-metadata.xml

        /usr/bin/startup.sh
    healthcheck:
      start_period: 60s
      interval: 5s
    volumes:
      - ./idp:/idp-config
    networks:
      - back

  ldap:
    image: "389ds/dirsrv:3.1"
    container_name: ldap
    env_file:
      - .env
      - .eclipse-pass.local_env
    # Start the container, wait for it to start, create the suffix, and then load users
    command:
      - /bin/bash
      - -c
      - |
        set -m
        /usr/lib/dirsrv/dscontainer -r &
        while !(/usr/lib/dirsrv/dscontainer -H) >/dev/null 2>&1; do sleep 5; done;
        dsconf -D "cn=Directory Manager" localhost backend create --suffix="$$DS_SUFFIX_NAME" --be-name="pass"
        ldapadd -f /pass.ldif -H ldap://localhost:3389 -w "$$DS_DM_PASSWORD" -D "cn=Directory Manager"
        fg
    volumes:
      - ./ldap/pass.ldif:/pass.ldif
    networks:
      - back

  loader:
    image: curlimages/curl:7.87.0
    container_name: loader
    env_file:
      - .env
      - .eclipse-pass.local_env
    entrypoint: /bin/sh -c
    command: [ 'curl http://pass-core:8080/data/ -u "$$PASS_CORE_BACKEND_USER:$$PASS_CORE_BACKEND_PASSWORD" -X PATCH -H "content-type: application/vnd.api+json;ext=jsonpatch" -H "accept:application/vnd.api+json; ext=jsonpatch" -H "X-XSRF-TOKEN:moo" -H "Cookie:XSRF-TOKEN=moo" -d "@/data.json"' ]
    networks:
      - back
    depends_on:
      pass-core:
        condition: service_healthy
    volumes:
      - ./demo_data.json:/data.json

  localstack:
    container_name: "localstack"
    image: localstack/localstack:3.2.0
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "./localstack/aws_bootstrap.sh:/etc/localstack/init/ready.d/init-aws.sh"
    networks:
      - back
