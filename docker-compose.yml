version: '3.8'

# The base docker-compose file for eclipse-pass.org deployments
# DO NOT CALL THIS directly, instead look at specific environments
#
#  - eclipse-pass.demo.yml
#  - eclipse-pass.nightly.yml
services:
  auth:
    image: ghcr.io/eclipse-pass/pass-auth:0.4.0@sha256:417e338b59d63343ffe0c8eec40a2d335f3402126c185923fa471bbd08a9ac28
    container_name: auth
    env_file:
      - .env
    networks:
      - front
      - back
    secrets:
     - source: sp_key
     - source: sp_cert
     - source: idp_cert

  pass-core:
    image: ghcr.io/eclipse-pass/pass-core-main:0.4.0@sha256:8a7f5aee466f513a5fd6910c9b73d6f46c95d43408f9cfc6d7f600adc539e47d
    container_name: pass-core
    env_file:
      - .env
    networks:
      - back
    depends_on:
      - postgres
    healthcheck:
      test: "curl -u $PASS_CORE_BACKEND_USER:$PASS_CORE_BACKEND_PASSWORD -f http://pass-core:8080/data/user || exit 1"
      start_period: 30s

  pass-ui:
    image: ghcr.io/eclipse-pass/pass-ui:0.4.0@sha256:c897d1b038ff85498cfd8d2b4178e56cd9bacaddffa7a3e4f61708d96264fd75
    build:
      context: ./ember
      args:
        # required args (throw error during build):
        EMBER_GIT_PASS_UI_GIT_REPOREPO: "${PASS_UI_GIT_REPO:?undefined-PASS_UI_GIT_REPO}"
        PASS_UI_GIT_BRANCH: "${PASS_UI_GIT_BRANCH:?undefined-PASS_UI_GIT_BRANCH}"
        # sensible defaults have been defined:
        DOI_SERVICE_URL: "${DOI_SERVICE_URL:-}"
        MANUSCRIPT_SERVICE_LOOKUP_URL: "${MANUSCRIPT_SERVICE_LOOKUP_URL:-}"
        MANUSCRIPT_SERVICE_DOWNLOAD_URL: "${MANUSCRIPT_SERVICE_DOWNLOAD_URL:-}"
        METADATA_SCHEMA_URI: "${METADATA_SCHEMA_URI:-}"
        PASS_UI_PORT: "${PASS_UI_PORT:-}"
        PASS_API_NAMESPACE: "${PASS_API_NAMESPACE:-}"
        PASS_UI_ROOT_URL: "${PASS_UI_ROOT_URL:-}"
        POLICY_SERVICE_URL: "${POLICY_SERVICE_URL:-}"
        USER_SERVICE_URL: "${USER_SERVICE_URL:-}"
    container_name: pass-ui
    env_file:
      - .env
    networks:
      - back # is 'back' in the main docker-compose, use this or 'front'?

  postgres:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    networks:
      - back
    volumes:
      - db:/var/lib/postgresql/data
      - ./postgres/demo/init_postgres.sh:/docker-entrypoint-initdb.d/init_postgres.sh

  proxy:
    build: ./demo-proxy/
    image: ghcr.io/eclipse-pass/proxy:0.4.0@sha256:51052cb6c31cdfa347f9a402932f35eaf7c32f4e5aaf5e4f46140d5ae767c48c
    container_name: proxy
    env_file:
      - .env
    networks:
      - front
      - back
    ports:
      - "80:80"
      - "443:443"

  pass-ui-public:
    build:
      context: ./static-html
      args:
        STATIC_HTML_GIT_REPO: "${STATIC_HTML_GIT_REPO}"
        STATIC_HTML_GIT_BRANCH: "${STATIC_HTML_GIT_BRANCH}"
    image: ghcr.io/eclipse-pass/pass-ui-public:0.4.0@sha256:aee39cd5cec8069ce8ce2e47ceed1f7cbcdb7e67e00913afd97cd17a68600373
    container_name: pass-ui-public
    env_file:
      - .env
    ports:
      - "${STATIC_HTML_PORT}:${STATIC_HTML_PORT}"
    networks:
      - front

  idp:
    build:
      context: ./idp
      args:
        TENANT: jhu
    image: ghcr.io/eclipse-pass/idp:0.4.0@sha256:769bda1e7853f97533ccbbc3b454ebb4d1953fd2e2e253f5ec76c70425cde1b8
    container_name: idp
    depends_on:
     - ldap
    environment:
     - JETTY_MAX_HEAP=64m
     - JETTY_BROWSER_SSL_KEYSTORE_PASSWORD=password
     - JETTY_BACKCHANNEL_SSL_KEYSTORE_PASSWORD=password
    expose:
     - "4443"
    env_file:
      - .env
    networks:
     - back
    secrets:
     - source: idp_backchannel
     - source: idp_browser
     - source: idp_encryption
     - source: idp_signing
     - source: idp_sealer
     - source: idp_cert

  ldap:
    build:
      context: ./ldap
      args:
        TENANT: jhu
    image: ghcr.io/eclipse-pass/demo-ldap:0.4.0@sha256:47c6a70dc6144daed0778f64d7faba301d2b8ed0ba8d79c69f759f134da8b85b
    container_name: ldap
    env_file:
      - .env
    networks:
     - back

  loader:
    image: curlimages/curl:7.87.0
    container_name: loader
    command: [curl, http://pass-core:8080/data/, -u, "$PASS_CORE_BACKEND_USER:$PASS_CORE_BACKEND_PASSWORD", -X, PATCH, -H, "content-type: application/vnd.api+json; ext=jsonpatch", -d, "@/data.json"]
    networks:
      - back
    depends_on:
      pass-core:
        condition: service_healthy
    volumes:
      - ./demo_data.json:/data.json

volumes:
  db:
    driver: local

networks:
  front:
    driver: bridge
  back:
    driver: bridge

secrets:
  idp_backchannel:
    file: ./secrets/idp/idp-backchannel.p12
  idp_browser:
    file: ./secrets/idp/idp-browser.p12
  idp_encryption:
    file: ./secrets/idp/idp-encryption.key
  idp_signing:
    file: ./secrets/idp/idp-signing.key
  idp_sealer:
    file: ./secrets/idp/sealer.jks
  idp_cert:
    file: ./secrets/idp/idp-signing.crt
  sp_key:
    file: ./secrets/sp/sp-key.pem
  sp_cert:
    file: ./secrets/sp/sp-cert.pem